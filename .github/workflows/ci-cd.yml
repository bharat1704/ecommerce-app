name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v2

    # Step 2: Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    # Step 3: Install and Test Backend
    - name: Install and Test Backend
      working-directory: ./Backend
      run: |
        npm install
        npm test

    # Step 4: Install, Lint, and Build Frontend
    - name: Install and Build Frontend
      working-directory: ./Frontend
      run: |
        npm install
        npm run build

  docker-build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v2

    # Step 2: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 3: Build and Push Backend Image
    - name: Build and Push Backend Image
      working-directory: ./Backend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/shopcart-backend:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/shopcart-backend:latest

    # Step 4: Build and Push Frontend Image
    - name: Build and Push Frontend Image
      working-directory: ./Frontend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/shopcart-frontend:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/shopcart-frontend:latest

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: docker-build-and-push

    steps:
    # Step 1: Deploy the application (example using SSH)
    - name: Deploy to Server
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/shopcart-backend:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/shopcart-frontend:latest
          docker-compose -f /path/to/docker-compose.yml up -d
          